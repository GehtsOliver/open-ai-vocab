import Head from "next/head";
import styles from "../styles/Home.module.css";
import { Button, ListItem, Stack, TextField, Typography } from "@mui/material";
import React, { useState } from "react";

const axios = require("axios");
const { Configuration, OpenAIApi } = require("openai");

const configuration = new Configuration({
  apiKey: process.env.OPENAIAPI_KEY,
});
const openai = new OpenAIApi(configuration);

export default function Home() {
  const [completion, setCompletion] = useState("");
  const [prompt, setPrompt] = useState("");
  const [vocab, setVocab] = useState("");

  const getCompletion = async () => {
    console.log("API KEY IN ENV VARIABLE:" + process.env.OPENAIAPI_KEY)
    console.log(configuration);
    const response = await openai.createCompletion({
      model: "text-davinci-001",
      prompt: `${prompt}`,
      max_tokens: 1000,
    });
    setCompletion(response.data.choices[0].text);
    console.log(response.data.choices[0].text);
  };

  const getTranslation = async (input, targetLanguage) => {
    axios
      .post("https://api-free.deepl.com/v2/translate", {
        Authorization: "DeepL-Auth-Key 4e8cb655-4f42-d77f-e86f-1b45057cd7fc:fx",
        text: "Hola mundo!",
        target_lang: "EN",
        "content-type": "application/x-www-form-urlencoded",
        "Access-Control-Allow-Origin": "*",
        "Access-Control-Allow-Methods": "GET,PUT,POST,DELETE,PATCH,OPTIONS",
      })
      .then(function (response) {
        console.log(response);
      })
      .catch(function (error) {
        console.log(error);
      });
  };

  return (
    <>
      <Head>
        <title>Lingua Franca</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <Stack width={"50%"} spacing={3} justifyContent="center">
          <TextField
            id="outlined-basic"
            label="Input"
            variant="outlined"
            onChange={(text) => {
              setPrompt(text.target.value);
            }}
          />

          <Button onClick={() => getCompletion()} variant="contained">
            Generate Text
          </Button>
          <p
            onMouseUp={() => {
              console.log("TRIGGER");
              setVocab(window.getSelection().toString());
              getTranslation(vocab, "EN");
            }}
          >
            {" "}
            {completion}{" "}
          </p>
        </Stack>
      </main>
    </>
  );
}
